syntax = "proto3";

package reddit;

import "user.proto";
import "post.proto";
import "comment.proto";
import "subreddit.proto";

service RedditService {
    rpc CreatePost(CreatePostRequest) returns (CreatePostResponse);
    rpc VotePost(VotePostRequest) returns (VotePostResponse);
    rpc RetrievePost(RetrievePostRequest) returns (RetrievePostResponse);
    rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);
    rpc VoteComment(VoteCommentRequest) returns (VoteCommentResponse);
    rpc RetrieveTopComments(RetrieveTopCommentsRequest) returns (RetrieveTopCommentsResponse);
    rpc ExpandCommentBranch(ExpandCommentBranchRequest) returns (ExpandCommentBranchResponse);
    rpc MonitorUpdates(stream MonitorUpdatesRequest) returns (stream MonitorUpdatesResponse);
}

message CreatePostRequest {
    string title = 1;
    string text = 2;
    oneof media {
      string video_url = 3;
      string image_url = 4;
    }
    PostState state = 6;
    string author_id = 8;
    string subreddit_name = 9; // ID of the Subreddit this post belongs to
}

message CreatePostResponse {
    Post post = 1;
    bool success = 2;
    string errorMessage = 3;
}

message VotePostRequest {
    int32 post_id = 1;
    int32 vote = 2;
}

message VotePostResponse {
    int32 post_id = 1;
    int32 new_score = 2;
    bool success = 3;
    string errorMessage = 4;
}

message RetrievePostRequest {
    int32 post_id = 1;
}

message RetrievePostResponse {
    Post post = 1;
    bool success = 3;
    string errorMessage = 4;
}

message CreateCommentRequest {
    string text = 1;
    string author_id = 2;
    oneof parent_id { 
        int32 p_post_id = 3; 
        int32 p_commentId = 4;
    }
    CommentState state = 5;
}

message CreateCommentResponse {
    int32 commentId = 1;
    bool success = 2;
    string errorMessage = 4;
}

message VoteCommentRequest {
    int32 commentId = 1;
    int32 vote = 2; // 1 for upvote, -1 for downvote
}

message VoteCommentResponse {
    int32 new_score = 1;
    bool success = 2;
    string errorMessage = 4;
}

message RetrieveTopCommentsRequest {
    int32 post_id = 1;
    int32 n = 2;
}

message RetrieveTopCommentsResponse {
    repeated Comment comments = 1;
}

message ExpandCommentBranchRequest {
    int32 commentId = 1;
    int32 n = 2;
}

message ExpandCommentBranchResponse {
    Comment comment = 1;
    repeated Comment levelOneReplies = 2;
    repeated Comment levelTwoReplies = 3;
}

message MonitorUpdatesRequest {
    int32 post_id = 1;
    repeated int32 commentIds = 2;
}

message MonitorUpdatesResponse {
    int32 post_id = 1;
    int32 commentId = 2;
    int32 new_score = 3;
}